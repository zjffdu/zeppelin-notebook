{
  "paragraphs": [
    {
      "text": "%md\n\nThis example will show how you can use (temporary) views to reuse code and to structure long queries and scripts. \n\n`CREATE (TEMPORARY) VIEW` defines a view from a query. **A view is not physically materialized.** Instead, the query is run every time the view is referenced in a query.\n\nTemporary views are very useful to structure and decompose more complicated queries and to re-use queries within a longer script.Non-temporary views - stored in a persistent [catalog](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/catalogs.html) - can also be used to share common queries within your organization, e.g. common filters or pre-processing steps.  \n\nHere, we create a view on the `server_logs` that only contains successful requests. This view encapsulates the logic of filtering the logs based on certain `status_code`s. This logic can subsequently be used by any query or script that has access to the catalog.   \n\n## Screenshot of this tutorial note\n![FlinkSqlCook-Foudation-07View](https://user-images.githubusercontent.com/164491/122321478-81fe5d00-cf56-11eb-9e21-d6f383335f63.gif)\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-17 10:27:07.474",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThis example will show how you can use (temporary) views to reuse code and to structure long queries and scripts.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCREATE (TEMPORARY) VIEW\u003c/code\u003e defines a view from a query. \u003cstrong\u003eA view is not physically materialized.\u003c/strong\u003e Instead, the query is run every time the view is referenced in a query.\u003c/p\u003e\n\u003cp\u003eTemporary views are very useful to structure and decompose more complicated queries and to re-use queries within a longer script.Non-temporary views - stored in a persistent \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/catalogs.html\"\u003ecatalog\u003c/a\u003e - can also be used to share common queries within your organization, e.g. common filters or pre-processing steps.\u003c/p\u003e\n\u003cp\u003eHere, we create a view on the \u003ccode\u003eserver_logs\u003c/code\u003e that only contains successful requests. This view encapsulates the logic of filtering the logs based on certain \u003ccode\u003estatus_code\u003c/code\u003es. This logic can subsequently be used by any query or script that has access to the catalog.\u003c/p\u003e\n\u003ch2\u003eScreenshot of this tutorial note\u003c/h2\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://user-images.githubusercontent.com/164491/122321478-81fe5d00-cf56-11eb-9e21-d6f383335f63.gif\" alt\u003d\"FlinkSqlCook-Foudation-07View\" /\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614268082780_1390435132",
      "id": "paragraph_1614268082780_1390435132",
      "dateCreated": "2021-02-25 23:48:02.780",
      "dateStarted": "2021-06-17 10:27:07.474",
      "dateFinished": "2021-06-17 10:27:07.486",
      "status": "FINISHED"
    },
    {
      "text": "%md\n本例将展示怎么使用(临时)视图来复用代码以及构造长查询和脚本。\n\n`CREATE (TEMPORARY) VIEW` 根据查询来定义视图。** 视图不是物理上的实体 ** 相反，每当某个查询引用视图时这个查询都会执行。\n\n临时视图对构造和解构更复杂的查询以及在长脚本中复用查询很有用。非临时视图持久化在[catalog](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/catalogs.html) 中， 可以被用来在组织内共享公共的查询，例如公共的过滤或者预处理步骤。\n\n这里，我们在 `server_logs` 上创建一个只包含成功请求的视图。这个视图封装来基于特定 `status_code` 筛选日志的逻辑。这个逻辑可用于后续的任何拥有查询这个 catalog 权限的查询和脚本。\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-18 15:28:03.231",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e本例将展示怎么使用(临时)视图来复用代码以及构造长查询和脚本。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCREATE (TEMPORARY) VIEW\u003c/code\u003e 根据查询来定义视图。** 视图不是物理上的实体 ** 相反，每当某个查询引用视图时这个查询都会执行。\u003c/p\u003e\n\u003cp\u003e临时视图对构造和解构更复杂的查询以及在长脚本中复用查询很有用。非临时视图持久化在\u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/catalogs.html\"\u003ecatalog\u003c/a\u003e 中， 可以被用来在组织内共享公共的查询，例如公共的过滤或者预处理步骤。\u003c/p\u003e\n\u003cp\u003e这里，我们在 \u003ccode\u003eserver_logs\u003c/code\u003e 上创建一个只包含成功请求的视图。这个视图封装来基于特定 \u003ccode\u003estatus_code\u003c/code\u003e 筛选日志的逻辑。这个逻辑可用于后续的任何拥有查询这个 catalog 权限的查询和脚本。\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1615107136845_1987078896",
      "id": "paragraph_1615107136845_1987078896",
      "dateCreated": "2021-03-07 08:52:16.847",
      "dateStarted": "2021-03-18 15:28:03.232",
      "dateFinished": "2021-03-18 15:28:03.248",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql\n\n\nDROP TABLE IF EXISTS server_logs;\n\nCREATE TABLE server_logs ( \n    client_ip STRING,\n    client_identity STRING, \n    userid STRING, \n    user_agent STRING,\n    log_time TIMESTAMP(3),\n    request_line STRING, \n    status_code STRING, \n    size INT\n) WITH (\n  \u0027connector\u0027 \u003d \u0027faker\u0027, \n  \u0027fields.client_ip.expression\u0027 \u003d \u0027#{Internet.publicIpV4Address}\u0027,\n  \u0027fields.client_identity.expression\u0027 \u003d  \u0027-\u0027,\n  \u0027fields.userid.expression\u0027 \u003d  \u0027-\u0027,\n  \u0027fields.user_agent.expression\u0027 \u003d \u0027#{Internet.userAgentAny}\u0027,\n  \u0027fields.log_time.expression\u0027 \u003d  \u0027#{date.past \u0027\u002715\u0027\u0027,\u0027\u00275\u0027\u0027,\u0027\u0027SECONDS\u0027\u0027}\u0027,\n  \u0027fields.request_line.expression\u0027 \u003d \u0027#{regexify \u0027\u0027(GET|POST|PUT|PATCH){1}\u0027\u0027} #{regexify \u0027\u0027(/search\\.html|/login\\.html|/prod\\.html|cart\\.html|/order\\.html){1}\u0027\u0027} #{regexify \u0027\u0027(HTTP/1\\.1|HTTP/2|/HTTP/1\\.0){1}\u0027\u0027}\u0027,\n  \u0027fields.status_code.expression\u0027 \u003d \u0027#{regexify \u0027\u0027(200|201|204|400|401|403|301){1}\u0027\u0027}\u0027,\n  \u0027fields.size.expression\u0027 \u003d \u0027#{number.numberBetween \u0027\u0027100\u0027\u0027,\u0027\u002710000000\u0027\u0027}\u0027\n);\n\nDROP VIEW IF EXISTS successful_requests;\n\nCREATE VIEW successful_requests AS \nSELECT * \nFROM server_logs\nWHERE status_code SIMILAR TO \u0027[2,3][0-9][0-9]\u0027\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-17 10:26:11.673",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\nView has been dropped.\nView has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614265884772_820912582",
      "id": "paragraph_1614265884772_820912582",
      "dateCreated": "2021-02-25 23:11:24.772",
      "dateStarted": "2021-06-17 10:26:11.675",
      "dateFinished": "2021-06-17 10:26:11.928",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql(type\u003dupdate)\n\nSELECT * FROM successful_requests \nORDER BY log_time DESC\nLIMIT 10;\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-06-17 10:26:19.955",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "client_ip": "string",
                      "client_identity": "string",
                      "userid": "string",
                      "user_agent": "string",
                      "log_time": "string",
                      "request_line": "string",
                      "status_code": "string",
                      "size": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TABLE",
            "data": "client_ip\tclient_identity\tuserid\tuser_agent\tlog_time\trequest_line\tstatus_code\tsize\n112.225.214.22\t-\t-\tMozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\t2021-06-17T15:26:39\tGET /prod.html /HTTP/1.0\t301\t8313331\n14.3.21.152\t-\t-\tMozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\t2021-06-17T15:26:39\tGET /login.html HTTP/1.1\t201\t7049162\n14.7.218.175\t-\t-\tMozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\t2021-06-17T15:26:40\tGET /order.html /HTTP/1.0\t301\t1248105\n152.148.18.164\t-\t-\tMozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\t2021-06-17T15:26:39\tPOST /login.html HTTP/1.1\t204\t9442170\n189.107.44.90\t-\t-\tMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\t2021-06-17T15:26:39\tPOST /order.html HTTP/2\t204\t5971916\n2.7.110.186\t-\t-\tMozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.59.10 (KHTML, like Gecko) Version/5.1.9 Safari/534.59.10\t2021-06-17T15:26:39\tPOST cart.html HTTP/2\t204\t8577406\n242.206.192.226\t-\t-\tMozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36\t2021-06-17T15:26:40\tGET cart.html HTTP/2\t301\t2284413\n250.134.109.173\t-\t-\tMozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0\t2021-06-17T15:26:39\tGET /prod.html HTTP/2\t204\t1650534\n58.186.205.233\t-\t-\tMozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\t2021-06-17T15:26:39\tPATCH cart.html /HTTP/1.0\t204\t686750\n83.168.139.81\t-\t-\tMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.2) Gecko/20040804 Netscape/7.2 (ax)\t2021-06-17T15:26:40\tGET cart.html /HTTP/1.0\t301\t5802944\n"
          },
          {
            "type": "TEXT",
            "data": "Fail to run sql command: SELECT * FROM successful_requests \nORDER BY log_time DESC\nLIMIT 10\njava.io.IOException: Fail to run stream sql job\n\tat org.apache.zeppelin.flink.sql.AbstractStreamSqlJob.run(AbstractStreamSqlJob.java:172)\n\tat org.apache.zeppelin.flink.sql.AbstractStreamSqlJob.run(AbstractStreamSqlJob.java:105)\n\tat org.apache.zeppelin.flink.FlinkStreamSqlInterpreter.callInnerSelect(FlinkStreamSqlInterpreter.java:89)\n\tat org.apache.zeppelin.flink.FlinkSqlInterrpeter.callSelect(FlinkSqlInterrpeter.java:495)\n\tat org.apache.zeppelin.flink.FlinkSqlInterrpeter.callCommand(FlinkSqlInterrpeter.java:258)\n\tat org.apache.zeppelin.flink.FlinkSqlInterrpeter.runSqlList(FlinkSqlInterrpeter.java:152)\n\tat org.apache.zeppelin.flink.FlinkSqlInterrpeter.internalInterpret(FlinkSqlInterrpeter.java:110)\n\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:849)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:741)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\n\tat org.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.flink.client.program.ProgramInvocationException: Job failed (JobID: 0367e510fc30a0f652971750c654928f)\n\tat org.apache.flink.client.deployment.ClusterClientJobClientAdapter.lambda$null$6(ClusterClientJobClientAdapter.java:125)\n\tat java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:616)\n\tat java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:591)\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n\tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1975)\n\tat org.apache.flink.runtime.concurrent.FutureUtils.lambda$retryOperationWithDelay$9(FutureUtils.java:394)\n\tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)\n\tat java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n\tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1975)\n\tat org.apache.flink.client.program.rest.RestClusterClient.lambda$pollResourceAsync$24(RestClusterClient.java:670)\n\tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)\n\tat java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n\tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1975)\n\tat org.apache.flink.runtime.concurrent.FutureUtils.lambda$retryOperationWithDelay$9(FutureUtils.java:394)\n\tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:774)\n\tat java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:750)\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n\tat java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:575)\n\tat java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:943)\n\tat java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:456)\n\t... 3 more\nCaused by: org.apache.flink.runtime.client.JobCancellationException: Job was cancelled.\n\tat org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)\n\tat org.apache.flink.client.deployment.ClusterClientJobClientAdapter.lambda$null$6(ClusterClientJobClientAdapter.java:123)\n\t... 24 more\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "FLINK JOB",
          "tooltip": "View in Flink web UI",
          "group": "flink",
          "values": [
            {
              "jobUrl": "http://localhost:8085#/job/0367e510fc30a0f652971750c654928f"
            }
          ],
          "interpreterSettingId": "flink"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614265919071_1139674991",
      "id": "paragraph_1614265919071_1139674991",
      "dateCreated": "2021-02-25 23:11:59.071",
      "dateStarted": "2021-06-17 10:26:19.966",
      "dateFinished": "2021-06-17 10:26:47.644",
      "status": "ABORT"
    },
    {
      "text": "%flink.ssql\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-25 23:12:27.804",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614265947803_931245766",
      "id": "paragraph_1614265947803_931245766",
      "dateCreated": "2021-02-25 23:12:27.804",
      "status": "READY"
    }
  ],
  "name": "07 Encapsulating Logic with (Temporary) Views",
  "id": "2FYJ4TZC6",
  "defaultInterpreterGroup": "flink",
  "version": "0.10.0-SNAPSHOT",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}