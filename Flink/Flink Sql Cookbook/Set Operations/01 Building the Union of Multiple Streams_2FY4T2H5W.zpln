{
  "paragraphs": [
    {
      "text": "%md\n\nThis example will show how you can use the set operation `UNION ALL` to combine several streams of data.\n\nSee [our documentation](https://ci.apache.org/projects/flink/flink-docs-master/docs/dev/table/sql/queries/#set-operations)\nfor a full list of fantastic set operations Apache Flink supports.\n\n\n## The Sources\n\nThe examples assumes you are building an application that is tracking visits :raccoon: on foreign planets :chestnut:. There are three sources of visits. The universe of Rick and Morty, the very real world of NASA and such, and the not so real world of Hitchhikers Guide To The Galaxy.\n\nAll three tables are `unbound` and backed by the [`faker` connector](https://github.com/knaufk/flink-faker).\n\nAll sources of tracked visits have the `location` and `visit_time` in commmon. Some have `visitors` some have\n`spacecrafts` and one has both.",
      "user": "anonymous",
      "dateUpdated": "2021-03-18 16:01:33.558",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThis example will show how you can use the set operation \u003ccode\u003eUNION ALL\u003c/code\u003e to combine several streams of data.\u003c/p\u003e\n\u003cp\u003eSee \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-master/docs/dev/table/sql/queries/#set-operations\"\u003eour documentation\u003c/a\u003e\u003cbr /\u003e\nfor a full list of fantastic set operations Apache Flink supports.\u003c/p\u003e\n\u003ch2\u003eThe Sources\u003c/h2\u003e\n\u003cp\u003eThe examples assumes you are building an application that is tracking visits :raccoon: on foreign planets :chestnut:. There are three sources of visits. The universe of Rick and Morty, the very real world of NASA and such, and the not so real world of Hitchhikers Guide To The Galaxy.\u003c/p\u003e\n\u003cp\u003eAll three tables are \u003ccode\u003eunbound\u003c/code\u003e and backed by the \u003ca href\u003d\"https://github.com/knaufk/flink-faker\"\u003e\u003ccode\u003efaker\u003c/code\u003e connector\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAll sources of tracked visits have the \u003ccode\u003elocation\u003c/code\u003e and \u003ccode\u003evisit_time\u003c/code\u003e in commmon. Some have \u003ccode\u003evisitors\u003c/code\u003e some have\u003cbr /\u003e\n\u003ccode\u003espacecrafts\u003c/code\u003e and one has both.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614317109077_464831649",
      "id": "paragraph_1614317109077_464831649",
      "dateCreated": "2021-02-26 13:25:09.077",
      "dateStarted": "2021-03-18 16:01:33.558",
      "dateFinished": "2021-03-18 16:01:33.575",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n本例将展示如何使用  `UNION ALL`  集合操作来将多个数据流合并。\n\n对于Apache Flink 提供的所有的不可思议的操作集请参考 [our documentation](https://ci.apache.org/projects/flink/flink-docs-master/docs/dev/table/sql/queries/#set-operations)。\n\n## 数据源\n\n这个例子假设你正在一个外星球:chestnut:创建一个访问跟踪应用:raccoon:。 有3 个访问源。瑞克和莫蒂的宇宙 ， NASA的真实世界，以及 不是很真实的银河系 Hitchhikers 指南.\n\n3 个不同的表都是 `unbound` 的并且使用 [`faker` connector](https://github.com/knaufk/flink-faker)提供数据。\n\n所有的被跟踪的访问都有 `location`和 `visit_time`字段。一些有 `visitors` 字段，一些有 `spacecrafts` 字段 以后两个字段都有。\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-18 16:01:36.503",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e本例将展示如何使用  \u003ccode\u003eUNION ALL\u003c/code\u003e  集合操作来将多个数据流合并。\u003c/p\u003e\n\u003cp\u003e对于Apache Flink 提供的所有的不可思议的操作集请参考 \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-master/docs/dev/table/sql/queries/#set-operations\"\u003eour documentation\u003c/a\u003e。\u003c/p\u003e\n\u003ch2\u003e数据源\u003c/h2\u003e\n\u003cp\u003e这个例子假设你正在一个外星球:chestnut:创建一个访问跟踪应用:raccoon:。 有3 个访问源。瑞克和莫蒂的宇宙 ， NASA的真实世界，以及 不是很真实的银河系 Hitchhikers 指南.\u003c/p\u003e\n\u003cp\u003e3 个不同的表都是 \u003ccode\u003eunbound\u003c/code\u003e 的并且使用 \u003ca href\u003d\"https://github.com/knaufk/flink-faker\"\u003e\u003ccode\u003efaker\u003c/code\u003e connector\u003c/a\u003e提供数据。\u003c/p\u003e\n\u003cp\u003e所有的被跟踪的访问都有 \u003ccode\u003elocation\u003c/code\u003e和 \u003ccode\u003evisit_time\u003c/code\u003e字段。一些有 \u003ccode\u003evisitors\u003c/code\u003e 字段，一些有 \u003ccode\u003espacecrafts\u003c/code\u003e 字段 以后两个字段都有。\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1615540369387_878272773",
      "id": "paragraph_1615540369387_878272773",
      "dateCreated": "2021-03-12 09:12:49.387",
      "dateStarted": "2021-03-18 16:01:36.504",
      "dateFinished": "2021-03-18 16:01:36.521",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql\n\nDROP TABLE IF EXISTS rickandmorty_visits;\n\nCREATE TABLE rickandmorty_visits ( \n    visitor STRING,\n    location STRING, \n    visit_time TIMESTAMP(3)\n) WITH (\n  \u0027connector\u0027 \u003d \u0027faker\u0027, \n  \u0027fields.visitor.expression\u0027 \u003d \u0027#{RickAndMorty.character}\u0027,\n  \u0027fields.location.expression\u0027 \u003d  \u0027#{RickAndMorty.location}\u0027,\n  \u0027fields.visit_time.expression\u0027 \u003d  \u0027#{date.past \u0027\u002715\u0027\u0027,\u0027\u00275\u0027\u0027,\u0027\u0027SECONDS\u0027\u0027}\u0027\n);\n\nDROP TABLE IF EXISTS spaceagency_visits;\n\nCREATE TABLE spaceagency_visits ( \n    spacecraft STRING,\n    location STRING, \n    visit_time TIMESTAMP(3)\n) WITH (\n  \u0027connector\u0027 \u003d \u0027faker\u0027, \n  \u0027fields.spacecraft.expression\u0027 \u003d \u0027#{Space.nasaSpaceCraft}\u0027,\n  \u0027fields.location.expression\u0027 \u003d  \u0027#{Space.star}\u0027,\n  \u0027fields.visit_time.expression\u0027 \u003d  \u0027#{date.past \u0027\u002715\u0027\u0027,\u0027\u00275\u0027\u0027,\u0027\u0027SECONDS\u0027\u0027}\u0027\n);\n\nDROP TABLE IF EXISTS hitchhiker_visits;\n\nCREATE TABLE hitchhiker_visits ( \n    visitor STRING,\n    starship STRING,\n    location STRING, \n    visit_time TIMESTAMP(3)\n) WITH (\n  \u0027connector\u0027 \u003d \u0027faker\u0027, \n  \u0027fields.visitor.expression\u0027 \u003d \u0027#{HitchhikersGuideToTheGalaxy.character}\u0027,\n  \u0027fields.starship.expression\u0027 \u003d \u0027#{HitchhikersGuideToTheGalaxy.starship}\u0027,\n  \u0027fields.location.expression\u0027 \u003d  \u0027#{HitchhikersGuideToTheGalaxy.location}\u0027,\n  \u0027fields.visit_time.expression\u0027 \u003d  \u0027#{date.past \u0027\u002715\u0027\u0027,\u0027\u00275\u0027\u0027,\u0027\u0027SECONDS\u0027\u0027}\u0027\n);\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 10:20:10.106",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614305963567_832874081",
      "id": "paragraph_1614305963567_832874081",
      "dateCreated": "2021-02-26 10:19:23.567",
      "dateStarted": "2021-02-26 10:20:10.118",
      "dateFinished": "2021-02-26 10:20:11.391",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql(type\u003dupdate)\n\nSELECT visitor, \u0027\u0027 AS spacecraft, location, visit_time FROM rickandmorty_visits\nUNION ALL\nSELECT \u0027\u0027 AS visitor, spacecraft, location, visit_time FROM spaceagency_visits\nUNION ALL\nSELECT visitor, starship AS spacecraft, location, visit_time FROM hitchhiker_visits;",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 13:25:07.955",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "visitor": "string",
                      "spacecraft": "string",
                      "location": "string",
                      "visit_time": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "FLINK JOB",
          "tooltip": "View in Flink web UI",
          "group": "flink",
          "values": [
            {
              "jobUrl": "http://localhost:8081#/job/e593129dd965907ab8c5215186684b1a"
            }
          ],
          "interpreterSettingId": "flink"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306010112_640828704",
      "id": "paragraph_1614306010112_640828704",
      "dateCreated": "2021-02-26 10:20:10.112",
      "dateStarted": "2021-02-26 10:20:27.416",
      "dateFinished": "2021-02-26 10:20:45.442",
      "status": "ABORT"
    },
    {
      "text": "%flink.ssql\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 10:20:27.407",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306027407_288306746",
      "id": "paragraph_1614306027407_288306746",
      "dateCreated": "2021-02-26 10:20:27.407",
      "status": "READY"
    }
  ],
  "name": "01 Building the Union of Multiple Streams",
  "id": "2FY4T2H5W",
  "defaultInterpreterGroup": "flink",
  "version": "0.10.0-SNAPSHOT",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}