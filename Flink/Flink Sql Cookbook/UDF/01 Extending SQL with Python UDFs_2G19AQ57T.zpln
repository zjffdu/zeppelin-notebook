{
  "paragraphs": [
    {
      "text": "%md\n\nInstall apache-flink\n\n```\npip install apache-flink\u003d\u003d1.12.1\n```\n\nThis example will show how to extend Flink SQL with custom functions written in Python.\n\nFlink SQL provides a wide range of [built-in functions](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/systemFunctions.html) that cover most SQL day-to-day work. Sometimes, you need more flexibility to express custom business logic or transformations that aren\u0027t easily translatable to SQL: this can be achieved with [User-Defined Functions](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/udfs.html) (UDFs).\n\nIn this example, you\u0027ll focus on [Python UDFs](https://ci.apache.org/projects/flink/flink-docs-stable/dev/python/table-api-users-guide/udfs/python_udfs.html) and implement a custom function (`to_fahr`) to convert temperature readings that are continuously generated for different EU and US cities. The Celsius-\u003eFahrenheit conversion should only happen if the city associated with the reading is in the US.",
      "user": "anonymous",
      "dateUpdated": "2021-03-18 16:01:45.310",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eInstall apache-flink\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003epip install apache-flink\u003d\u003d1.12.1\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis example will show how to extend Flink SQL with custom functions written in Python.\u003c/p\u003e\n\u003cp\u003eFlink SQL provides a wide range of \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/systemFunctions.html\"\u003ebuilt-in functions\u003c/a\u003e that cover most SQL day-to-day work. Sometimes, you need more flexibility to express custom business logic or transformations that aren\u0026rsquo;t easily translatable to SQL: this can be achieved with \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/udfs.html\"\u003eUser-Defined Functions\u003c/a\u003e (UDFs).\u003c/p\u003e\n\u003cp\u003eIn this example, you\u0026rsquo;ll focus on \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/python/table-api-users-guide/udfs/python_udfs.html\"\u003ePython UDFs\u003c/a\u003e and implement a custom function (\u003ccode\u003eto_fahr\u003c/code\u003e) to convert temperature readings that are continuously generated for different EU and US cities. The Celsius-\u0026gt;Fahrenheit conversion should only happen if the city associated with the reading is in the US.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306308381_842100307",
      "id": "paragraph_1614306308381_842100307",
      "dateCreated": "2021-02-26 10:25:08.387",
      "dateStarted": "2021-03-18 16:01:45.311",
      "dateFinished": "2021-03-18 16:01:45.328",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n本例将展示如何使用Python编写的自定义函数来扩展 Flink SQL\n\nFlink SQL 提供来很多的内置函数[built-in functions](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/systemFunctions.html) ，它们覆盖来几乎所有的日常工作所需的函数。有时，我们需要更多的灵活性来表达一些难以转换为 SQL 的自定义的业务逻辑或者转换：我们可以通过 [User-Defined Functions](https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/udfs.html) (UDFs)来达到目的。\n\n在本例中我们聚焦于 [Python UDFs](https://ci.apache.org/projects/flink/flink-docs-stable/dev/python/table-api-users-guide/udfs/python_udfs.html) 并使用一个自定义的函数 (`to_fahr`) 来转换来自不同的 EU和 US 城市的温度的读数显示。只有这个读数关联的城市是 US 的时候才进行摄氏度到华氏度的转换。\n",
      "user": "anonymous",
      "dateUpdated": "2021-03-18 16:01:48.650",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e本例将展示如何使用Python编写的自定义函数来扩展 Flink SQL\u003c/p\u003e\n\u003cp\u003eFlink SQL 提供来很多的内置函数\u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/systemFunctions.html\"\u003ebuilt-in functions\u003c/a\u003e ，它们覆盖来几乎所有的日常工作所需的函数。有时，我们需要更多的灵活性来表达一些难以转换为 SQL 的自定义的业务逻辑或者转换：我们可以通过 \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/table/functions/udfs.html\"\u003eUser-Defined Functions\u003c/a\u003e (UDFs)来达到目的。\u003c/p\u003e\n\u003cp\u003e在本例中我们聚焦于 \u003ca href\u003d\"https://ci.apache.org/projects/flink/flink-docs-stable/dev/python/table-api-users-guide/udfs/python_udfs.html\"\u003ePython UDFs\u003c/a\u003e 并使用一个自定义的函数 (\u003ccode\u003eto_fahr\u003c/code\u003e) 来转换来自不同的 EU和 US 城市的温度的读数显示。只有这个读数关联的城市是 US 的时候才进行摄氏度到华氏度的转换。\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1615539187631_995640762",
      "id": "paragraph_1615539187631_995640762",
      "dateCreated": "2021-03-12 08:53:07.631",
      "dateStarted": "2021-03-18 16:01:48.645",
      "dateFinished": "2021-03-18 16:01:48.659",
      "status": "FINISHED"
    },
    {
      "text": "%flink.pyflink\n\nfrom pyflink.table import DataTypes\nfrom pyflink.table.udf import udf\n\nus_cities \u003d {\"Chicago\",\"Portland\",\"Seattle\",\"New York\"}\n\n@udf(input_types\u003d[DataTypes.STRING(), DataTypes.FLOAT()],\n     result_type\u003dDataTypes.FLOAT())\ndef to_fahr(city, temperature):\n  if city in us_cities:\n    fahr \u003d ((temperature * 9.0 / 5.0) + 32.0)\n    return fahr\n  else:\n    return temperature\n    \nst_env.register_function(\"to_fahr\", to_fahr)\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 10:33:10.938",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306085122_1142579790",
      "id": "paragraph_1614306085122_1142579790",
      "dateCreated": "2021-02-26 10:21:25.122",
      "dateStarted": "2021-02-26 10:23:50.582",
      "dateFinished": "2021-02-26 10:23:52.718",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql\n\n\nDROP TABLE IF EXISTS temperature_measurements;\n\nCREATE TABLE temperature_measurements (\n  city STRING,\n  temperature FLOAT,\n  measurement_time TIMESTAMP(3),\n  WATERMARK FOR measurement_time AS measurement_time - INTERVAL \u002715\u0027 SECONDS\n)\nWITH (\n  \u0027connector\u0027 \u003d \u0027faker\u0027,\n  \u0027fields.temperature.expression\u0027 \u003d \u0027#{number.numberBetween \u0027\u00270\u0027\u0027,\u0027\u002742\u0027\u0027}\u0027,\n  \u0027fields.measurement_time.expression\u0027 \u003d \u0027#{date.past \u0027\u002715\u0027\u0027,\u0027\u0027SECONDS\u0027\u0027}\u0027,\n  \u0027fields.city.expression\u0027 \u003d \u0027#{regexify \u0027\u0027(Copenhagen|Berlin|Chicago|Portland|Seattle|New York){1}\u0027\u0027}\u0027\n);\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 10:23:17.099",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306097701_1279422606",
      "id": "paragraph_1614306097701_1279422606",
      "dateCreated": "2021-02-26 10:21:37.701",
      "dateStarted": "2021-02-26 10:23:17.107",
      "dateFinished": "2021-02-26 10:23:17.960",
      "status": "FINISHED"
    },
    {
      "text": "%flink.ssql(type\u003dupdate)\n\n--Use to_fahr() to convert temperatures in US cities from C to F\nSELECT city,\n       temperature AS tmp,\n       to_fahr(city,temperature) AS tmp_conv,\n       measurement_time\nFROM temperature_measurements\nORDER BY measurement_time DESC\nLIMIT 10;\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 13:26:02.808",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "city": "string",
                      "tmp": "string",
                      "tmp_conv": "string",
                      "measurement_time": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "FLINK JOB",
          "tooltip": "View in Flink web UI",
          "group": "flink",
          "values": [
            {
              "jobUrl": "http://localhost:8081#/job/8b3669937956e8b8950352dd940ff3f9"
            }
          ],
          "interpreterSettingId": "flink"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306197104_1373037918",
      "id": "paragraph_1614306197104_1373037918",
      "dateCreated": "2021-02-26 10:23:17.104",
      "dateStarted": "2021-02-26 10:27:06.707",
      "dateFinished": "2021-02-26 10:28:36.691",
      "status": "ABORT"
    },
    {
      "text": "%flink.ssql\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-26 10:23:39.052",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1614306219052_1345346806",
      "id": "paragraph_1614306219052_1345346806",
      "dateCreated": "2021-02-26 10:23:39.052",
      "status": "READY"
    }
  ],
  "name": "01 Extending SQL with Python UDFs",
  "id": "2G19AQ57T",
  "defaultInterpreterGroup": "flink",
  "version": "0.10.0-SNAPSHOT",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}